#pragma checksum "D:\dotnet\repos\ImageConverter\ImageConverter\Views\ConvertToASCIIPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "32DCD4CECCC88414D93CFA28F0E388A54FC041CA775A32B691FFB11055F3BFC0"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageConverter.Views
{
    partial class ConvertToASCIIPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Microsoft.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ConvertToASCIIPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IConvertToASCIIPage_Bindings
        {
            private global::ImageConverter.Views.ConvertToASCIIPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Button obj5;
            private global::Microsoft.UI.Xaml.Controls.Button obj6;
            private global::Microsoft.UI.Xaml.Controls.ToggleSwitch obj7;
            private global::Microsoft.UI.Xaml.Controls.Slider obj8;
            private global::Microsoft.UI.Xaml.Controls.Slider obj9;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj10;
            private global::Microsoft.UI.Xaml.Controls.AppBarButton obj11;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5CommandDisabled = false;
            private static bool isobj6CommandDisabled = false;
            private static bool isobj7IsOnDisabled = false;
            private static bool isobj8ValueDisabled = false;
            private static bool isobj9ValueDisabled = false;
            private static bool isobj10CommandDisabled = false;
            private static bool isobj11CommandDisabled = false;

            private ConvertToASCIIPage_obj1_BindingsTracking bindingsTracking;

            public ConvertToASCIIPage_obj1_Bindings()
            {
                this.bindingsTracking = new ConvertToASCIIPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 143 && columnNumber == 29)
                {
                    isobj5CommandDisabled = true;
                }
                else if (lineNumber == 150 && columnNumber == 29)
                {
                    isobj6CommandDisabled = true;
                }
                else if (lineNumber == 126 && columnNumber == 35)
                {
                    isobj7IsOnDisabled = true;
                }
                else if (lineNumber == 114 && columnNumber == 29)
                {
                    isobj8ValueDisabled = true;
                }
                else if (lineNumber == 98 && columnNumber == 25)
                {
                    isobj9ValueDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 25)
                {
                    isobj10CommandDisabled = true;
                }
                else if (lineNumber == 41 && columnNumber == 35)
                {
                    isobj11CommandDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // Views\ConvertToASCIIPage.xaml line 140
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 6: // Views\ConvertToASCIIPage.xaml line 147
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 7: // Views\ConvertToASCIIPage.xaml line 125
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ToggleSwitch>(target);
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // Views\ConvertToASCIIPage.xaml line 108
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Views\ConvertToASCIIPage.xaml line 92
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Views\ConvertToASCIIPage.xaml line 32
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    case 11: // Views\ConvertToASCIIPage.xaml line 39
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IConvertToASCIIPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::ImageConverter.Views.ConvertToASCIIPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::ImageConverter.Views.ConvertToASCIIPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::ImageConverter.ViewModels.ConvertToASCIIViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_GenerateASCIICommand(obj.GenerateASCIICommand, phase);
                        this.Update_ViewModel_ResetSettingsCommand(obj.ResetSettingsCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_IsNegativeOn(obj.IsNegativeOn, phase);
                        this.Update_ViewModel_WidthOffset(obj.WidthOffset, phase);
                        this.Update_ViewModel_SizePercent(obj.SizePercent, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_AddCommand(obj.AddCommand, phase);
                        this.Update_ViewModel_SaveASCIICommand(obj.SaveASCIICommand, phase);
                    }
                }
            }
            private void Update_ViewModel_GenerateASCIICommand(global::CommunityToolkit.Mvvm.Input.IRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\ConvertToASCIIPage.xaml line 140
                    if (!isobj5CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ResetSettingsCommand(global::CommunityToolkit.Mvvm.Input.IRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\ConvertToASCIIPage.xaml line 147
                    if (!isobj6CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_IsNegativeOn(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\ConvertToASCIIPage.xaml line 125
                    if (!isobj7IsOnDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj7, obj);
                    }
                }
            }
            private void Update_ViewModel_WidthOffset(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\ConvertToASCIIPage.xaml line 108
                    if (!isobj8ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj8, obj);
                    }
                }
            }
            private void Update_ViewModel_SizePercent(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\ConvertToASCIIPage.xaml line 92
                    if (!isobj9ValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj9, obj);
                    }
                }
            }
            private void Update_ViewModel_AddCommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\ConvertToASCIIPage.xaml line 32
                    if (!isobj10CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveASCIICommand(global::CommunityToolkit.Mvvm.Input.IAsyncRelayCommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\ConvertToASCIIPage.xaml line 39
                    if (!isobj11CommandDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj11, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_7_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.IsNegativeOn = this.obj7.IsOn;
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.WidthOffset = this.obj8.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_9_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SizePercent = (global::System.Int32)this.obj9.Value;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ConvertToASCIIPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<ConvertToASCIIPage_obj1_Bindings> weakRefToBindingObj; 

                public ConvertToASCIIPage_obj1_BindingsTracking(ConvertToASCIIPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ConvertToASCIIPage_obj1_Bindings>(obj);
                }

                public ConvertToASCIIPage_obj1_Bindings TryGetBindingObject()
                {
                    ConvertToASCIIPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ConvertToASCIIPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::ImageConverter.ViewModels.ConvertToASCIIViewModel obj = sender as global::ImageConverter.ViewModels.ConvertToASCIIViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_IsNegativeOn(obj.IsNegativeOn, DATA_CHANGED);
                                bindings.Update_ViewModel_WidthOffset(obj.WidthOffset, DATA_CHANGED);
                                bindings.Update_ViewModel_SizePercent(obj.SizePercent, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsNegativeOn":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_IsNegativeOn(obj.IsNegativeOn, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "WidthOffset":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_WidthOffset(obj.WidthOffset, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SizePercent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SizePercent(obj.SizePercent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::ImageConverter.ViewModels.ConvertToASCIIViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::ImageConverter.ViewModels.ConvertToASCIIViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_IsOn();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_Value();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\ConvertToASCIIPage.xaml line 21
                {
                    this.CommandBarGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 3: // Views\ConvertToASCIIPage.xaml line 66
                {
                    this.ContentScrollViewer = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ScrollViewer>(target);
                }
                break;
            case 4: // Views\ConvertToASCIIPage.xaml line 77
                {
                    this.SettingsPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 8: // Views\ConvertToASCIIPage.xaml line 108
                {
                    this.WidthOffset = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\ConvertToASCIIPage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    ConvertToASCIIPage_obj1_Bindings bindings = new ConvertToASCIIPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

