<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="ImageConverter.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ImageConverter.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    xmlns:c="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    xmlns:helpers="using:ImageConverter.Helpers"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
    </Page.Resources>

    <ScrollViewer>
        <StackPanel Margin="56,44">
            <labs:SettingsExpander x:Uid="SettingsTheme">
                <labs:SettingsExpander.HeaderIcon>
                    <FontIcon Glyph="&#xE790;"/>
                </labs:SettingsExpander.HeaderIcon>

                <labs:SettingsExpander.Items>
                    <labs:SettingsCard ContentAlignment="Left">
                        <RadioButtons>
                            <RadioButton
                                x:Uid="SettingsThemeLight"
                                Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                IsChecked="{x:Bind ViewModel.CurrentTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}">
                                <RadioButton.CommandParameter>
                                    <xaml:ElementTheme>Light</xaml:ElementTheme>
                                </RadioButton.CommandParameter>
                            </RadioButton>
                            <RadioButton
                                x:Uid="SettingsThemeDark"
                                Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                IsChecked="{x:Bind ViewModel.CurrentTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}">
                                <RadioButton.CommandParameter>
                                    <xaml:ElementTheme>Dark</xaml:ElementTheme>
                                </RadioButton.CommandParameter>
                            </RadioButton>
                            <RadioButton
                                x:Uid="SettingsThemeDefault"
                                Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                IsChecked="{x:Bind ViewModel.CurrentTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}">
                                <RadioButton.CommandParameter>
                                    <xaml:ElementTheme>Default</xaml:ElementTheme>
                                </RadioButton.CommandParameter>
                            </RadioButton>
                        </RadioButtons>
                    </labs:SettingsCard>
                </labs:SettingsExpander.Items>
            </labs:SettingsExpander>

            <labs:SettingsExpander x:Uid="SettingsUserSymbols">
                <labs:SettingsExpander.HeaderIcon>
                    <FontIcon Glyph="&#xED58;"/>
                </labs:SettingsExpander.HeaderIcon>

                <ToggleSwitch x:Name="tsUseCustomSymbols"
                              IsOn="{x:Bind ViewModel.UserSymbolsIsOn, Mode=TwoWay}">
                    
                    <i:Interaction.Behaviors>
                        <c:EventTriggerBehavior EventName="Toggled">
                            <c:InvokeCommandAction Command="{x:Bind ViewModel.SetUseUserSymbolsCommand}"/>
                         </c:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ToggleSwitch>

                    <labs:SettingsExpander.Items>
                        <labs:SettingsCard x:Uid="SettingsUserSymbolsSettingCard"
                                           x:Name="CustomSymbolsSetting">

                                <TextBox MinWidth="100"
                                         Text="{x:Bind ViewModel.UserSymbols, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                         LostFocus="{x:Bind ViewModel.SetUserSymbolsAsync}">
                                </TextBox>
                        </labs:SettingsCard>
                    </labs:SettingsExpander.Items>
            </labs:SettingsExpander>
        </StackPanel>
    </ScrollViewer>
</Page>
